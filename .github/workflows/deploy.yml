name: Deploy to Azure

on:
    push:
        branches: ["main", "master", "develop"]
    pull_request:
        branches: ["main", "master", "develop"]
        types:
            - "closed"
    workflow_dispatch:

jobs:
    build_docker_images:
        name: Build docker images
        # this job will only run if the PR has been merged or push to develop
        # if: github.event_name == 'push' || github.event.pull_request.merged == true
        # Fix lỗi run 2 lần khi merge request
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name != github.event.pull_request.base.repo.full_name
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Filter changes
              uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      server:
                        - 'server/**'
                      web:
                        - 'web/**'
                      nginx:
                        - 'nginx/**'

            - name: Set up Docker Buildx
              id: buildx
              uses: docker/setup-buildx-action@v3

            - name: Cache Docker layers
              uses: actions/cache@v3
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-buildx-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-buildx-

            - name: Login to DockerHub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_HUB_USERNAME }}
                  password: ${{ secrets.DOCKER_HUB_TOKEN }}
                  logout: true

            - name: Build server image
              if: steps.filter.outputs.server == 'true'
              uses: docker/build-push-action@v5
              with:
                  context: ./server
                  file: ./server/Dockerfile
                  builder: ${{ steps.buildx.outputs.name }}
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/megacine:server
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new

            - name: Build web image
              if: steps.filter.outputs.web == 'true'
              uses: docker/build-push-action@v5
              with:
                  context: ./web
                  file: ./web/Dockerfile
                  builder: ${{ steps.buildx.outputs.name }}
                  push: true
                  tags: ${{ secrets.DOCKER_HUB_USERNAME }}/megacine:web
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache-new

            # - name: Build nginx image
            #   if: steps.filter.outputs.nginx == 'true'
            #   uses: docker/build-push-action@v5
            #   with:
            #       context: ./nginx
            #       file: ./nginx/Dockerfile
            #       builder: ${{ steps.buildx.outputs.name }}
            #       push: true
            #       tags: ${{ secrets.DOCKER_HUB_USERNAME }}/megacine:nginx
            #       cache-from: type=local,src=/tmp/.buildx-cache
            #       cache-to: type=local,dest=/tmp/.buildx-cache-new

            - name: Update cache
              run: |
                  rm -rf /tmp/.buildx-cache
                  mv /tmp/.buildx-cache-new /tmp/.buildx-cache

            - name: Get timestamp
              id: timestamp
              run: echo "name=timestamp::$(date +'%s')" >> $GITHUB_OUTPUT

    deploy:
        name: Deploy to Azure
        needs: build_docker_images
        runs-on: self-hosted
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Filter changes
              uses: dorny/paths-filter@v2
              id: filter
              with:
                  filters: |
                      server:
                        - 'server/**'
                      web:
                        - 'web/**'
                      nginx:
                        - 'nginx/**'

            - name: Update server container
              if: steps.filter.outputs.server == 'true'
              run: docker compose up -d --pull=always --force-recreate --no-deps --build server

            - name: Update web container
              if: steps.filter.outputs.web == 'true'
              run: docker compose up -d --pull=always --force-recreate --no-deps --build web

            - name: Update nginx container
              if: steps.filter.outputs.nginx == 'true'
              run: |
                  docker compose up -d --pull=always --force-recreate --no-deps --build nginx
                  docker compose up -d --force-recreate --no-deps --build certbot

            - name: Remove unused data
              run: docker system prune -f
